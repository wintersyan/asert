# ==============================================================================
# 注释：脚本配置及内部逻辑修改说明
# ==============================================================================
#
# 一、活动入口链接 (脚本顶层注释部分):
#      'http://f162017.kb9d.84kqzyi.shop/yyiyase/bbe0c68f647190bcb6cb44e412e0b1bd?ukd=37'

# 二、环境变量配置
#
# 1. xyy (账号信息，必需)
#    格式: ysmuid&unionid&token
#    多账号格式: 账号1@账号2@账号3
#    示例: 5a68xxxxxxx&oZdBpxxxxxxx&ff2cdxxxxxxx@5a68xxx&oZdBpxxx&ff2cdxxx
#    - ysmuid: 从Cookie中抓取
#    - unionid: 从请求体中抓取
#    - token: pushplus推送加的token，用于接收检测文章
#
# 2. UA (User-Agent，必需)
#    格式: 浏览器或设备的User-Agent字符串
#    示例: Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1
#
# 3. xyytx (自动提现开关，可选)
#    值: 1 (开启自动提现，满5000金币时)
#         0 (关闭自动提现，或不配置此变量默认为关闭)
#
# 三、脚本内部逻辑主要修改点 (基于解混淆后的代码):
#
# 1. codeid 验证逻辑绕过:
#    - 脚本内部用于验证用户是否为“受邀用户”的 codeid 检查逻辑已被修改。
#    - 此修改会使脚本跳过原始的 codeid 比较步骤，直接判定为“账号验证成功”。
#      (原始脚本期望从页面获取的 codeid 与一个硬编码ID，如 *****4981，匹配)
#
# 2. 初始URL获取超时调整:
#    - 脚本在首次尝试从 'https://www.filesmej.cn/waidomain.php' 获取活动落地页URL时，
#      网络请求的超时时间已从原来的5秒增加到30秒，以应对可能的网络延迟。
#
#
# ==============================================================================

import sys
sys.dont_write_bytecode = True
import base64, zlib
_exec_code_payload = b'eJztXXt3E0ey/9+fYlY5B0uJLUs2BuLESdiQPZu7Ae4mcO/mEq6OLI3tAVlSNGNs4+NzZIKxMX4GsMHYmId5hOBHgGBjGfxdspqR9FfyEW5Vd89Mz0uSDZvs7s2EyNJMd3V1dXXVr6sf85ZwtK29W45FFTEuRBWhMdTYXB9qrm8MCeHmlubmlqa9wXfDB0L7wjVvCfntFe3Ki+LqM+3aRPjnrTntxjNtZk17+rA0PJrfWC7Mndee5dTRh+rQPXXybunyK23i3s9bY4UHudL1JXVpuHDlIb359+w5G7lGIBdLxUUpLpQejRVXB0vZXPHVtLr+hKbKb2wWcleL28Pa3az24yUngSYgUPp2RF19IRyJdomfZDKpjAAcFbdv5Dey2vK9n7Lz6tJ4/uX4T9kFSEuZym9eUOcf5jdypWtDxdWc9uNg4eEl9eI4kklHM7IYj8RTXVEpiaS0a6/UrUlkYJHVgLvU++e0m/O2TEC7NDyursypU9Pqq0eFiVUQkzb/qPjNS21kSh1dLP54Sc1ugYzUF8/zG1e02e+0+UWuAtr41eLEOuQo5Ea05TvF83Pa/GNMPnJdnZoo5JbVyVUgpg5vFibWzHwO7oCIOjmjjiyoDy4Vp16q82ul2z8e//wzdemH4rN7WDdSq/yrhcL55/nthcLV60gjcjbyRyX5l1N/EVqFRLSrLR4V3o60CEdSSbHG5/PV/LL47Zqgrk2C9OBf5L+ag2Eo7KfrOVSjUHMoXANJrlyhwi3+OFcanlY3BoF/+gWY1yangHO4o61OqkvfhX/KXmlUh77BG/OPaXWLw49Ap7SJh6XsIG19bWa48P0tdWRNfbWS376N9OazxfuDoF/ayLp28RKkZ2XqCgNpjO8gOZ6yujKGjXHxu/zL6/kc6C8SzG+MU5r5jUvFly+j6TRKff4hLVG7eFndysIjbeYF1Wh1/Ck2xfYN1P2RNdoPQMYoRZDB9EW+Zwg8FdDFTkVJtzQ0tIf3NYbC+4On296NBw/sPf312T4pKHem0g19fVJfVBYb2trEUGzfgfZ9e/eH3w21xdr2xdr27hX3hhvFUFu4Lf5h9+l4a9N+WqKa2yyurKhrFyiH2jowcKs4/JQVfuV5cXbST39EtJHpCL0T+Wn0aqTw5Frx2bMA1UuaESt17rH240rh0Sy2zsyL/KttWl9aNexEt3+sqflp7tbPG5NMEqCj516owzltbSP/YojWHqW7vaAuX8tvjhVyzwq3UCHUl5eZIJd+0K6OaLPPtYvfwyOquNp8FgyNblAG9UIMFclD38/OQQP7091yZzrRLVN1Ab4D6uS0U3EMTdHmN3mjAmYmn8vmX4xAy6M94HL9vLWo3rgFCWh1QQCQhpaa33ikjnzPJ2bm5OoadC31zk3gQ1sAvVjSZpZp0TQBdrz5i1jf7AMU6sVsPndP3R4q3c4V5heBN5oMlZfUE9M/vK1dWqT3QUmh5pS+USLUAvoSsFR8dl+dXGf96kCosAp8MnsBhTbBb3UdUjxlvV9nnWgslS+wmt+cYJS5JFgpojdA3+i6xe2p4m3GJ1rQ0dtQkXxuQh2C5pmFlP7iyh2gBd8COvtLwIQu3TF16j6aNcIgVKv4AJibpuWU7k5oEyghdXWrOPyMcTR7CyRn9mpiyoD7wv1BMJXAOxXhO7SXUz1Urz80RMrKmxrTbq1XWRhQ94OmOlM7k4Lq06qAlqjDt9RpaPUZ+AINo82PFB/cVdcGA4YiX3mO/ev5iDYIHmJc3XpBetkiGBxdodUbN8F9gRPTtrOggTQtuDLo35Bq7wGwwtBp1AtDxe2b4BeatYXbjF6OuL6VO9r8uJnr5R1wZbRrYAsuL2HmSUxMeWHtSxgBG1268K0psbULlCaq4sK2K016k6MMlb5omE9qKkAeeuXYjYvjqJucLGjJKPXi6n3tmyHaiDYhAGXaZ6HJQWbASQByoN+BpqLUUBp+XgQBxiypHzQVeGkwMJR3FxlPrqoXxrXHt+l9KyWuvwAGYMb1yW3s1xNMmHzfYTyPzNAvau55cXsRZUuFPzpKrRy1wEZDQI9DtmaG87nn+a1bxVeX1dHvwHwBc0AKHxHjjbxeGKdSosr4B+BtYZb+g0qCMqLHXdpE9KZbT2id0vUpqD8zTcymjRrOrZCbBgyjjQ3DpxTPv9wmkgavOVPMMqcLyQubD6S4uvYKOjhYyb3vHghjtYae53MzpYWb6uRs6VyWJlYXhlHLocaEFJWgziUAoNLsM2QU9GZjw+jHxZXt0uwK72vAN3GdeQx9BrFE1IljCcQDFtentRwBCYPb6tB48c73hgUHyAPQSd06BwVBfyTmDLyLOnkODCmIqCb8d1JBELDDsaDoSQNbncQY6zm61VOHngJA9iCA4Jg0lv7QABDqyrXCy+nS/RnsF08fqhfG1JWb6tQ4+mNOOdEzUA957iHoiJI6LSbBxeZzS+rt79UL15HS5LXS8CTKuBEqQzGHNnpZHRsqvgSVew4UoYYGiEMDplcFkw1vfpxKnZbE0vAYFNAnd3VDI38LCH1d++FcHrw2ud+dlFJJKY6uHRzY5Ch9rC49o8OC47KYqT/YISYVKlrS4pQxqBMIurevT/+NcHiuObrvQC+99qT+J/7HtP6jvb0xFmc/dBLarS3oy5CLcifsERg78I1IpEZdmmPesFJS4SPBk4pJBgjQL+GP6N9G9repJv/qksm/wbvB90eeTziBtAjHDwqCH3pRBTkGLEI7nDorJRLRhuZgSJD+sxNAuk1QhqyVXkvGcA3D2ASMC2HQEHVqVQiB7pZml5GR8dLQeOHlCs1Uyl0rrizBTT4Xaj7JBtYUultzKBSiIJ9PBA4PDcns85YaHXvjr+KD8+BXYplUEpgRQsL++samhibhbfKfn3ZqvAd9BX40UVeHo7rHtwNkpIAWA3qJdn6S2VzqmrNzhUUcgDoRTA0dJLgXb7toUh7e7LLMGhOv5obyr26oy/fzL27lN5dg2IkdeXWdjEVxvIHAee58417Dq8MgRR16qI7cgkGrgCkvbVN0pl69kN+Yw5F19goYZLC02tOrhRsrkJ3DOBMwNgWJF58tYtfDoVuN1JVOZRQhI+rfUrL+7ZScSurfFanLSJGJJmFga+b8uluUFSOX0pkRo3Ep2VHTnkl1Cd2ZREJqC5IBscCSwL1TKSlZNgH5XTlFHR1qR76WaVqdm6DYGxPTCvRcWc/yOX30if6gYoaPU8mkGMNbZDRdJxwDIaS6lRoYVIMZRkczCzB9tiYutgufxHoTbYc72/xdoixHO4CxdjDkna1/iiZkMdBSgyqUzkhJxd/u62dpBnx6KvIZQMLg0zD2sDlJqKYzqRikjURjsVQ35GV/6wSJkeyK9kYyopKRRBkG52FyrzuK31nSoJxOSIrft8cXOBE6eaK+qeUkSUTNnGuyRpqCGsA6w/65pm1hicnHW3qAYXERbAwtJtNHGcUr1p3JgNGKQOMBNUPyHSIQw8GvDKPfnp6eYLuUEOUu8VQwlmzoiUo0ihJMd6ZBXgptg9bG5kAQFdQfOOGLR5Wo7+QJX6I7FZd8lCHanILR2gIIRTRZ0ZsCkEb5oEiL0M+107FMtxgwiIDguzNJqDaN+lASkJNRJPlplAYHA9Afcw8Ak9eQ/DI0K7LFyeELestPC+iEXiRmsCX7jQJ9pkr6WgTfaVFM10cT0hnRV2emOZ7uyEDW+k+TsggSF+uZ4suYJWxJafgReARqefzggNAP2jPAJzoYQwliXkXsVRo6la5EXTQNGhCLIh8NvXjnnV773a7Ee1+3hoLv1kldoOkN0TNSO/va05uWYuy7ku7Q74ptaT1tOtlR93bD24TAAQtZWepIivF6aNzOaLJDfO9Ma1sTSbafZ/lvepUh6X9LSicyH0t1BRUxGYPKBru6nBWs/yQZS6HZwsQdZ6V0nQAdMBFVRJe0n0Hh3cAqpj3bWf/xkbqznay6YrL++BeMczHp5I3CKCJv2sFa++nfAR9JNMB3J1sYkYzxYChlxBDVtYXi6lWAsjSAyHIxbSSJ1Bu3SleuF1dxDAXD8VI2C1AOdNJGmYUDHoEnzL+4SDwGhhUpMMfgwtZVGBWZkUVSUnsqI0QEyJ7BtvCHw4EWwaiopeOTHkdLhL4fSbWdArXWTbifMwsBwZKH9YETvj+nZMV3EjJZqQSTopJIxSx5MqKcBiMuQmLWx4iB4Qqp0+m2sr91QjSRSPWAIY1LGeheMrXaprEJhwKWMqR2o5igrESVbjmCUWuUhb8pFK4TmkKN+NGEH/vx40DAKg28gHOi1cQGMGqMI2oTP2MJwPz4fAFHfuAimVIMMs4CiNhNQ2fEoKlGtAg6fSYPDK5/h8oBJgzMHicxLwPIX23g9k8LjkdWm888v7U19ApY6YrQAi1OelbF9dAiphfBhAyeMe33oVPxBdA/kX4CANJNmBbSFaQ5PySw0D0dd9GwLvF7IDoLpUrCIxWt1HaUdPHBXe3mlO6YqFPJ5yasbSWwVMObNKhIs1ZgwtZ6zHv6Dd9kB091bsAp+GnyDLijOOhPwOZvbdUxVBGDB2Rwo+ukt7f1ZtPm5AWvUplgXl4GSwg8kojUdOHKIi1b8FvEGKiKlxpmc+lsFY1rkFt0FisC8uhGU4RzJYITEen9PoK+1Y6JLKW1+9j0gE25Gj6UkmckBcpqDQGzb3GzRhlJPu3Qa2IyZFFxs7MWrKFf1PYSfOBQ692VRqh6I5nKCKY65GIU9a+HYAzWq0Ey1SCYN4BcuJYrj2D0a8Ca1/Slxu1AEBvE+NkVVWKdpBMEoY5pGAT4M7W0H30lv90K//v8X8XfCfhqA0FZjGZinX5L/zG7J6ghIWa1P7YuSVIEOzKp7rQ/HHC3Gedf/LwxKYCJhSFBaeGOPlTA+RxGDh0lR9fLYDiNPC2DmKXl++r0KAnFPsKpYlIUzhBffAVFUeouZJnxM3ogZ/ccoxtKRB+RzPHuSqi19NhawTIxTSzm37Pnyo+AeH48XUalERjlEYxy4eV0ITevx7yqHoQ5s+VfLKqbV4qr9+i0uZXLoEjMVrVMact3YRxX2UsZ7PAZyjCyc/FQn4WLARbv7YAfGoLnswFXjB/L6F2Kk5/xvmS0S4pFdujEIjAqiJBowe++7HdfxrP+/8qXQa9xdWfayDT4DnAbxJN5ODLWhyz+TCdodSIunVRP6PRsu/dBgsl37Wt6Io7Sm3dHZiRurbh9vTQ8hhH47BxO680/pOUzty2gIV1/wszjG/FfXM125MR26JGsxVTjlnbqaawlVOdu9NDTVlZ9cIlOelhC3l8l+2tba4W3hXBo4JfFK2s0oXbxAc6mkDmzfok8MJN9lXSpCyuntbWVLfuDsTwu4yOLApmLJJMtmITjwPfL4vSYQEuiYzWqUcIJtmxk/QmlcdJaqEBrhh0+KCfAsusdijFirB+k+oa4EDqrXYfRc4ADwUBHQvYHBGhlvGUNOAh08Z0liGfzQHyELr9xCbsoidDhPBgI4cYzbeIe58b8wFpp4WZ+Y9TArlb1V2/c4r0e6QusLTHC1pFKxCNSsj0FZsXTZ/d1J1PJhJQUG86EGzCHT+Dj1xYi/aZhKOeKyzvUnQWteX+F8wV1AnGcp6JnonIsI6WVOgGdm4AuIkT8sZuf+tvhz/4M1WcP+JI+F9vFjJghvHhIqDq39vpB5nLu7D1BPAUS/RhavzXMR5qB12iXvZV8bM6HSpj9IC2DHQHuYpcifQI/QKGxw4ZCAWFA7y+u+JAUgo1gR4cWZXOEZ/lHlN1WO9eWUC2bF/JwTW/BcO5e6dqT/MZwfiNr62DF7WvatdXS7ErpzjVvA0lntHGBz+Bq1U6MdtxKQ6k34ol4/gxXVO1QgecABRn8jy+OHjkkot34pBr/ZCscc1O3XTUD5DcXYjf1hobFwU0iN74A2HghZLKC04AkLRdQt+clU4V1Qv9AgMvWp+cyKOiJ6RNUfOoAfdZsONPtng2fuGZLRGXFozjjkWvGjIiq5FEk99A1s6O5flm8Pi58eqil34EgQfCOe4gcAQMCEtMDILVebWgWgGvCSaiVakRLv1E/cO2/LF6egY44ijPo608ALQAnTGwDgkBXYbf0c9UqX54P1/kJ/BoT9G5k3YqPRINg5NoXQWsez0R7ogmiObRa7lnJGpYKVeQRzeUZHvrQlR54twKcsbQNzqdFM4oUS4gRMtFuzq01NQVsYW09VI12T1aiXWmE/u5W2ZqvU4ydPiTFMNp8wjkgOnz29NnDx77sO3zoeOjoX1tbUZvgXujIoVjv4WOnGw+b984eOfZl79FjHX2HD+I9d1pHDkGaQ182Hz1o5Os5cvbLHrjfx9HqO3Lqy9DhY5/0HvWm1QN8Qd5Yz+EePV/H3iPHYj1HD30SPmLS7zt86sveI2f/2njESeukYxhnRXX6RRySqET05jCmmzydfI/SlabfG32OWIJbgMKd/s5iFq+Bc5zllAFWOwRFBsmjGalDSpbBRki6CgRliQvtZBT/Ho96rB1owDqQJvbUtUV4NKSvhbFmtvwwPI+Vko57yKYZPn07Rd6ZPrO3c4t6XKaNHTPrVZZswIk0KJTfXcNdsJdLGhRWq4fETCS23wLE7BedPbPf1ecdvZZe0WnFSFJUKs6YsolZutWDoDKKg+gyX8FP104I/UT274QHGvo5sdPZPyynmqlvglWwBd+3rMeqF8ItvI1pDDa756dT3WYwhmeUrtgQ/M7qBKycvWcJxrsI1RPMEQXZhTzt0K46mWJhv4VQ7dzuWLBecvWC5VXL0RlhqUqSv4UQeSZfUzMtP9hSlrIWjNhJ7+f2scEfLGMDo0KZTKRL7uBHCF60aiFdbR2BvUadawOWgYkbmwwrz95SL4+rm1dqHSyU1wUjVEgZrdTIbEFElbBG5zcd7TCYlpVMBWmcqEVbX3sS/tLh7ElvouhWwHkrMr80x6NYK28dir68K/K17HcnGgQPlukL0ObpUKB1TtTWnsSFrRVVq8PFY3AtYaylsTQGacH8xjJtpw623B5ax6NGVbWWtbHsfjghJU8TnNnvIQIZEHyXOIAoySMFXfw00NAbj4K0+j7sUFr7O5SBPagXrf2OgcPAnrTckWwN7zuw54zcGm4MWac+3IAAY7IsWC3P3JuI8hmF/mrRPqNEHrO+gYaS++S+IM7cfeiVlCh+mcrvJlpYMSZZBi+Xh7yoH78F4OXLdQYYbQpcHuvSFL8SloUB47FOSRbgX08nKJagdIr6CF+gs0Jk+qBD6AQNF5PyTkAG27z37wJ+aXW8IMZbwhekn4P0JXBCRJiocChQtn3hV8DHlMd/P3xcVvb/AHzMzgL498HH5ZW3xg24lDFybojYeFo9HsYEGOh1g4Ee5MB7HGk46HNHwyaDNMCKKV1Gpd5I3FroDnC4reRdoHDj9AlA4YKfVZfBcV1OVL2qw+fApVXErcLeUDO2nPP2fsFlvbuD2dV1qvt0rzrdj7iLQQKDcJVkT5A/mS+hv/FxrWMzBNmGAE+8IDbrGnQxCSbcBcNt0ll+SY2+bqY2EoEnrf4T/7vn5DsBYBXJB+w5IY+R31gYg5ybVKmuGn1YW7inbU5RpfDZ0E40HiF2gWBoZIdsiAziH6ztgTqh0WYv4qJCIUAkLiaifc48ALvrhHCTLZtrxJ+beArZG0KSpSSA+mRM9OvJ6gS/hDsGccAFkCMZx2/G00BQkuNSh6T4XYCXS4nIq5HX2kD83ojC48f9jtzv2GY33hHCA8bJH6wTkkUZ9fX17JQE0gjwU+iHhirX18xpp8szllUo0FVRI1zXq3CCIzrS6tX+2F8xBYAwY/6k7HCS/kPHNWE59qGaquBFgD87DACkrsfFcR+LfjuIHw2ymIz7HNlJbJbL7xyo4eUje0AB9pO/ZHJfSZABBD3HwjzSyXq2wSDdogwqK9MtydBq+gkMgy5DFFJWLJVU2Giu9v2o0JkR21t9rGkEJZoB69Lqi7QlomAcPsBzi/jjKw7I+dy9/Mao+uJ5cfuKeuPm+w3RD95vy3xAzbWfHioW0NsarIBHhcWuNBnZtKBIuxJOyQ04WxXEGJG7Y7gPF0RJdoY5EpGpOwXJK9WOavDyHNngZZhm5MA1fq+3MB+RN+95rIhwu3hfigSoszcn2RtDLtDBIiS76lsOWlp/Qk+7ME6dYtvcjfNlOBX6KXsfZ4evzvbbbOaATPYk4g5a6vQgpX2tVlkWre2IOcqmdx/U6Zf3pq2qRMJO/9CDfU7hu4OeaiCtK+omhL35dfJK24uuXiRDsZ+35vrRcVBSVXECWqX3CRd4bSIDVuTyXTwZiMM2lIlgMGiHyxwyb3JD5m4ojKy341Sg4jjEq9G0+WwhN2Js7mYncpF19N6Le/jLFezjxVXLpvvuDkLubuuSwL/qad9Q2PCUlGyTYmlb2NCGeuhtEj90Cyk6DaseY3Fh2sM7/RahRFLwrx5OJKX+84QUOSH8Q9bhV+F0DYNoVxfPqCJeO44s4lWdD/biwxFltCd0RhmdKaqLMuLl7ZTczb5ZltfQUrBOg0xO4UE0/CF/o8+17ODOo4dmydW4CrxeNxZDpFBFMNFZR0c8xm38abBYViNwfFU+Sfk1jPxFli7CMDcpWlY0elN1jNaRgokiat3lZh+3OQdp2uPbznOMjKEajtxezbJFfrjsr59jfABv7HoDvEuMqEztdchE2pc6aDxgz4gBBapoPxY38iJRHWiwHUZZfbQIL5dzFDyOQuA6hc07l8ULyVSmiwT7/mXAgsHx70hB+B0pWC97f6a68hvDBCsTXhiBpvIECPrjfzg6wIJ2BA+ur5Syc28EHmDR/6T4gKvk6+ADXhXcwAH3/E0hAwdJc9MD/e25x8Ct2UlEFYa4eO4td+i0w8YXHnxbRUPuBGz8pgDDLsTdoQu+9V8TWvA7C94QrjA3MtTjJoV91WxS8NhMEbYdtcGcPL/bpdxkhZHOfbbCeFzVdAVfKFbQzO0I+zuzfCDgmaXewX19Q0cjUTy2jZVsGyGaaTz1lKR+eToU9BA9TLjEE5fZduAyr4qX7knsZNzxE1673o75cRSQRj2kUDKpBD4G21wPpbmu1DdKe7OnIhhk/3VPRzCqUN0pCdWeW6BfTtyEl2GtLHriehaVQymdsMX2mJ9+sByNYOMgzOZzu9v8tV/JaGJr68px5hn1JlI+Dnxys8TtUjIeTST8tT7bFBOdf/IH3/4w4PuA9t/3ablhz2A2hpAd5VQKqjPYhNvKjJ2i5EQD45QFOitO0xjvxakSE/E7Jh0ioUfuOTi2r5bl00do5+cX7+JtD5ljhk6wG1iKmdntUEZLFjKciMTpHjRjxS9PgS7z9aZgHklrI0hdNXvMLQ92N5MkM1PziDc5MwW/4LiclqDKnTDEU2dhus5e7EmPEQdeVuxtKAhdp4VH26+MaVeftQhYTGu/UeKAcWovu6lv4TaO7YsYj8wb1QJxj+VeeHmjVSVl9GXmlp2+t4HtIqf7Fr0E7CD3PnHZnotneDmSvZ4USXLH/ZkbUwNCceV2YQXfBYEHmz9/Sij7++1lDgToy4HoARa0aSp6fLsAK8Bu3D87fEFdGmYtPzxdurPQ4mSlilI9cUY3eFkdKpkYw9Qj6+kORmp3J6M7Ap5oVYjDLO8N72k0yqom2LJLzPExXdhQf6wvLdqZ7q3v6empb4dBQD1UUcQIiRh/TwCDDGZOaT1+7E/1B8rRdtk/aZWVGQoSyVGqbwgYkJUElmbkN0FarZnPNCD6M/MOPCb60uLstRUgiVG69/ZFI4kTi3CPzKUR3E2XtRFe5saDo+qWV+qX047fOW87G6hcObtfDUBl6m1uUI4AkqIJ3jpXtgR64vKGwEHYaSG81c+RuYwp8dRNxOAeetkdxd7aWK77pRXWp/E0Ol+arR/HG+R3MkrOQvHtCnJbq+et5NZ0Tk23PzfV3f5kNzrvwmX1USq8jOMZwJtpg8vqzLx2jrw0iPQCGuL5eWuwKt9Zfs2No4s5e5ZXbarrXs6wUjXHtER64hWXmlB+i9vDhYeX8A0vtvNagETFM6QrbWHoiVe3i8HGitvpLTqtKnn6NBkXe+nZO+5t59Fw+HIdUjIPfB1HNpvUA5VHTe5RcKhOd/J0MtWzY+m4H43GESwnItsMHxs5VI6JsbPDqg+LuYFfNbsFqJbHvfR1ddgzyU5I+pJC7dqqOnW/CnjrdVi7LWi2f8D8VqGtqkfsJlDfASYnAnc9Fcb9zPId1sDCveuxNFXyarV5jk0L7K1r3ElUvL17HRBh7Kf6nH4BcaHXFsgZYe1RKSHX1JBX1IAySqCtTPFcD/7yfNkLaKxITsds6Eh2nD7V0NPbF2+ApmjogvYVMw2JaJuYCCq9iM5199UccNAPZqISmvdUJkLfxuAP2E88MpKaIaTdn7LFzxoZr16jr3xCAzW8CcKlO5DAa9SA5CIRxAqRCFliHomQ7cIRH6Wty4/8YBBDjojJMyC1FJEXfPf7evv6fKxWTrUVQtg+1tRKL4KUEPXQ8JfOP9A3BJGP4wedpRw/qBcC9FgCSSbTqHZJWPZ04JtG7nxD3wsG+fCFduQlRpXWReIuPVb14weBFVakcQSYRR47ZgSksBtOrH3OYCEhkUgXz5L+JqSPuDm0ZHdXJNWuv7EJlxrDwM9voeI8SuqrpHGyltBvozAgGG9x9eAdJ7SlOp0zsqNfSgoi0BEzUUW0Fo5+JJoBGGg/UUqPXZlUgvT1GfaEPOOFx4+Ffolj0XiJCB7rtf4UfGVlv4x7A6SkbT226/wI8MhJk/JovIwqILwvNFX04Q6O6csA0Rgv3y3cXhH8ZM//Jnv/1R42mNhDNkkE+IrhOQAmI9WMxlwr6sRJLqOiyhWw7jTlcNFrsGzwa3Nuri8lQ4r4YjKHxavVLV5ti5COynLN/wFb+6Lc'
_exec_code = zlib.decompress(base64.b64decode(_exec_code_payload))
exec(_exec_code, globals())
